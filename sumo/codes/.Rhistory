i = x>qnorm(.975)
colorie(x[i],y[i],rep(0,sum(i)) ,col='red')
line(y-x)
lines(y-x)
curve(dchisq(x,3), from =0, to=100, add=T, col=col[3])
curve(dchisq(x,3), from=0,to=10,col="red")
n <- 15#
col <- rainbow(n)#
for (i in 1:n){#
    curve(dchisq(x,i), from=0, to=100, add=T, col=col[i])#
}
old <- par(new=TRUE) #
n <- 15#
col <- rainbow(n)#
for (i in 1:n){#
    curve(dchisq(x,i), from=0, to=100, add=TRUE, col=col[i])#
}#
par(old)
install.packages("Rcpp")
install.packages("inline")
f <- function(n, x=1) for (i in 1:n) x=1/(1+x)#
g <- function(n, x=1) for (i in 1:n) x=(1/(1+x))#
h <- function(n, x=1) for (i in 1:n) x=(1+x)^(-1)#
j <- function(n, x=1) for (i in 1:n) x={1/{1+x}}#
k <- function(n, x=1) for (i in 1:n) x=1/{1+x}
library(Rcpp)#
library(inline)
l <- cxxfunction(signature(ns="integer", xs="numeric"),#
                 'int n = as<int>(ns); double x=as<double>(xs);#
                  for (int i=0; i<n; i++) x=1/(1+x);#
                  return wrap(x); ',#
                 plugin="Rcpp")
library(rbenchmark)
install.packages("rbenchmark")
library(rbenchmark)
N <- 1e6#
benchmark(f(N, 1), g(N, 1), h(N, 1), j(N, 1), k(N, 1), l(N, 1),#
          columns=c("test", "replications", "elapsed", "relative"),#
          order="relative", replications=10)
sumo <- data.frame(x=[1:15])
c(1:15)
sumo <- data.frame(x=c(0:15), win=c(0, 0, 6, 13, 24, 38, 53, 37, 102, 54, 10, 17, 17, 7, 5, 3))
sumo
barplot(sumo)
library(ggplot2)
ggplot(sumo, aes(x = x, y = win)) + geom_bar()
head(mtcars)
head(movies)
ggplot(sumo, aes(x = x, y = win)) + geom_line
ggplot(sumo, aes(x = x, y = win)) + geom_line()
g <- ggplot(sumo, aes(x = x, y = win)) + geom_line()
g <- ggplot(sumo, aes(x = x, y = win)) + geom_path(aes(colour = "observation"))
dsumo <- function(x) dbinom(x, size=sum(sumo$win), prob=1/2)
dsumo(3)
dsumo(19)
sum(sumo$win)
length(sumo$x)
dsumo <- function(x) dbinom(x, size=length(sumo$x), prob=1/2)
dsumo(3)
dsumo <- function(x) sum(sumo$win)*dbinom(x, size=length(sumo$x), prob=1/2)
dsumo(3)
g+ stat_function(fun=dsumo, colour="theory") + scale_colour_manual( values = c("observation" = "orange", "theory" = "blue"))
g+ stat_function(fun=dsumo, aes(colour="theory")) + scale_colour_manual( values = c("observation" = "orange", "theory" = "blue"))
dsumo(3)
dsumo(8)
dsumo(3.3)
g
theory <- data.frame(x=c(1:15), win=dsumo(x))
theory <- data.frame(x=c(1:15), win=dsumo(c(1:15)))
theory
g + geom_path(theory, aes(x = x, y = win, colour="theory")) + scale_colour_manual(values = c("observation" = "orange", "theory" = "blue"))
g + geom_line(theory, aes(x = x, y = win, colour="theory")) + scale_colour_manual(values = c("observation" = "orange", "theory" = "blue"))
g
qplot(theory, aes(x=x, y=win))
theory
qplot(x, win, data=theory)
qplot(x, win, data=theory) + geom_soomth()
qplot(x, win, data=theory) + geom_smooth()
qplot(x, win, data=theory, geom="line")
g + qplot(x, win, data=theory, geom="line")
qplot(x, win, data=theory, geom="line") + geom_path(sumo, aes(x = x, y = win, colour="red"))
sumo1 <- data.frame(x = sumo$x, obswin = sumo$win, thewin = theory$win)
c(0:15)
sumo1 <- data.frame(x = sumo$x, obswin = sumo$win, thewin = dsmo(c(0:15)))
sumo1 <- data.frame(x = sumo$x, obswin = sumo$win, thewin = dsumo(c(0:15)))
sumo1
melt(sumo1, id=('x'))
ggplot(data=melt(sumo1, id('x'), aes(x=x, y=value, colour=variable)) + geom_path()
;
ggplot(data=melt(sumo1, id('x')), aes(x=x, y=value, colour=variable)) + geom_path()
ggplot(data=melt(sumo1, id='x'), aes(x=x, y=value, colour=variable)) + geom_path()
N<-10000 # 人数#
h<-0.8 # 遺伝率#
prevalence<-0.01 # 有病率#
GRisk<-rnorm(N,sd=sqrt(h)) # 遺伝リスク#
ERisk<-rnorm(N,sd=sqrt(1-h))　# 環境リスク#
AllRisk<-GRisk+ERisk # 遺伝リスクと環境リスクが独立としてやる。正規分布する#
Phenotype<-rep(0,N) # 高リスク側のprevalence 分を発症者とする#
Disease<-which(AllRisk>quantile(AllRisk,1-prevalence))#
Phenotype[Disease]<-1
ERisk<-rnorm(N,sd=sqrt(1-h))
AllRisk<-GRisk+ERisk
Phenotype<-rep(0,N)
Disease<-which(AllRisk>quantile(AllRisk,1-prevalence))
Phenotype[Disease]<-1
NumJoint<-rep(0,N)#
mNumJoint<-mean(GRisk[Disease])#
for(i in 1:length(Disease)){#
 NumJoint[Disease[i]]<-rpois(1,GRisk[Disease[i]]/mNumJoint*4)#
}#
hist(NumJoint[Disease])
install.packages(gamair)
install.packages("gamair")
library(gamair)
data(hubble)
head(hubble)
attaceh(hubble)
attach(hubble)
plot(y~x)
hmod <- ln(y~x)
hmod <- lm(y~x)
coef(hmod)
layout(matrix(1:2, ncol=2))
plot(y~x,)
abline(hmod)
plot(hmod, which =1 )
plot(hmod)
plot(hmod, which =2)
plot(hmod)
runif(100)
rnorm(100)
rbinom(1000,1,runif(100))
?rbinom
?lm
lm
library("gamair")
head(hubble)
str(hubble)
help(package="gamair")
vignette("hubble", package="gamair")
help(hubble)
attache(hubble)
atatch(hubble)
attach(hubble)
plot(hubble)
plot(y~x)
help(lm)
ans = lm(y~x, data=hubble)
summary(ans)
coef(ans)
residuals(ans)
fitted(ans)
str(ans)
abline(ans)
coeff(ans)
coef(ans)
help(hubble)
abline(fitted(ans))
?abline
ans
 365*24*60*60
76.1269/3.09*e13
76.1269/3.09e13
76.1269/3.09e13/365*24*60*60
1/(76.1269/3.09e13)
1/(76.1269/3.09e13) / 365*24*60*60
3.09e13/76.127/(365.25*24*60*60)
3.09e19/76.127/(365.25*24*60*60)
3.09e19/coeff(ans)/(365.25*24*60*60)
3.09e19/coef(ans)/(365.25*24*60*60)
3.09e19/coef(ans)[2]/(365.25*24*60*60)
par(c(2,2))
plot(ans)
par(mfrow=c(2,2))
plot(ans)
dev.new()
plot(y~x)
abline(ans)
head(hubble)
head(hubble, 24)
ans
summary(ans)
library(gamair)
help(gamair)
help(hubble)
head(hubble)
attach(hubble)
data(hubble)
attach(hubble)
haubble
hubble
plot(y~x)
help(lm)
ans = lm(y~x, data=hubble)
summary(ans)
str(ans)
coef(ans)
residuals(ans)
abline(ans)
?abline
help(hubble)
3.09*319/coef(ans)[2]/(365.25*24*60*60)
3.09*e19/coef(ans)[2]/(365.25*24*60*60)
3.09e19/coef(ans)[2]/(365.25*24*60*60)
dev.new()
par(mfrow=c(2,2))
plot(ans)
hubble
data = read.csv("http://spreadsheets.google.com/pub?key=0AlBuJgqcP5f3dE50RHJnYzQzNVFrb3dBSWc3M2wtVXc&hl=en&single=true&gid=0&output=csv#
")
data = read.csv("http://spreadsheets.google.com/pub?key=0AlBuJgqcP5f3dE50RHJnYzQzNVFrb3dBSWc3M2wtVXc&hl=en&single=true&gid=0&output=csv")
data
data[1:10]
data[20:29,]
data[age>=20 & age < 30]
data[][age>=20 & age < 30]]
data[[age>=20 & age < 30]]
data = read.csv("http://spreadsheets.google.com/pub?key=0AlBuJgqcP5f3dE50RHJnYzQzNVFrb3dBSWc3M2wtVXc&hl=en&single=true&gid=0&output=csv",header=T)
data[[age>=20 & age < 30]]
?subset
data[[age>=20 & age < 30,]]
data[age>=20 & age < 30,]
data
age20 <- subset(data, age>=20 & age<30)
age20
age30 <- subset(data, age>=30 & age<40)
index <- c(20, 30, 40, 50, 60, 70, 80, 90, 100)
for (i in length(index)-1){}
for (i in length(index)-1){
    genpop[i] <- sum(subset(data, age>=index[i] & age<index[i+1]))
s
}
index <- c(20, 30, 40, 50, 60, 70, 80, 90, 100)#
N <- lengh(index) - 1#
genpop <- rep(0, N)
N <- length(index) - 1
N
genpop <- rep(0, N)
genpop
for (i in N){#
  genpop[i] <- sum(subset(data, age>=index[i] & age<index[i+1]))#
}
genpop
index
index[i]
incex[2]
index[2]
i
N
subset(data, age => index[1] & age < index[i+1])
subset(data, age >= index[1] & age < index[i+1])
subset(data, age >= index[1] & age < index[1+1])
sum(subset(data, age >= index[1] & age < index[1+1]))
index[1]
index[8]
for (i in 1:N){#
  genpop[i] <- sum( subset(data, age >= index[i] & age < index[i+1]) )#
}
genpop
hist(genpop)
barchart(genpop)
barplot(genpop)
prob <- genpop/sum(genpop)
prob
obs <- c(8, 0, 0, 3, 0, 0, 0, 0)
chisq.test(obs, p=prob)
summry(data)
summary(data)
attach(data)
sum()age*pop/sum(pop))
sum(age*pop/sum(pop))
t.test(age, mu=30.9)
?rbinom
rbinom(10,1,0.5)
rbinom(10,1,0.3)
rbinom(10,1,0.5)
rnorm(10)
library(twitteR)#
sess <- initSession('yutakashino','iamthet1!')#
search1 <- searchTwitter("素敵", n = 100, session)#
search2 <- searchTwitter("ステキ", n = 100, session)#
tweet1 <- sapply(search1, text)#
tweet2 <- sapply(search2, text)#
head(tweet1)#
library(RMeCab)#
RMeCabDF(tdf1, 1)#
summary(sapply(RMeCabDF(tdf1, 1), length))#
summary(sapply(RMeCabDF(tdf2, 1), length))
tdf1 <- data.frame(tweet = tweet1)#
tdf2 <- data.frame(tweet = tweet2) #
library(RMeCab)#
RMeCabDF(tdf1, 1)#
summary(sapply(RMeCabDF(tdf1, 1), length))#
summary(sapply(RMeCabDF(tdf2, 1), length))
2560/(60*60)
2560/(24*60)
2560/(60*60)
2560/60
q()
sytem("ls")
system("ls")
system("convert")
setwd("/Users/yutakashino/Dropbox/sandboxDrop/@IT/sandbox/sumo")#
library(plyr)#
fn <- file("out.csv", open="r", encoding="utf-8")#
df <- read.csv(file = fn, header = FALSE)#
names(df) <- c("rikishi", "vs", "win", "year", "month")#
nrow(df)#
df <- subset(df, df$win!=-100 & df$win!=-1)#
#
#ddply(subset(df2, year==1999 & month==1), .(rikishi), function(d) data.frame(numwin = sum(d$win)))#
#ddply(subset(df2, year==1999 & month==1), .(rikishi), summarize, numwin=sum(win))#
#
df <- ddply(df, .(rikishi, year, month), summarize, numwin=sum(win))#
#
library(ggplot2)#
p2 <- ggplot(df, aes(numwin)) + geom_histogram(aes(y = ..count..))#
ggsave(plot = p2, filename = "sumoobservation.png")#
#
#p2 + stat_function(geom="line", fun = function(..., total){dbinom(...) * total}, arg = list(size=15, prob=1/2, total=nrow(df3)))#
#
dsumo <- function(x, total) total*dbinom(x, size = 15, prob = 1/2)#
dft<- data.frame(x = c(0:15), win_theory = dsumo(c(0:15), nrow(df)))#
df2 <- as.data.frame(table(df$numwin))#
names(df2) <- c("x", "win_observ")#
str(df2)#
df2 <- transform(df2, x = as.integer(x)-1, win_theory = dft$win_theory)#
ggplot(data = melt(df2, id = 'x'), aes(x = x, y = value, colour = variable)) + geom_line()#
ggplot(data = df2, aes(x)) + geom_point(aes(y = win_observ, colour = "win_observ")) + geom_point(aes(y = win_observ, colour = "win_observ")) + geom_line(aes(y = win_theory, colour = "win_theory"))#
ggsave("sumoanorm.png")
getwd()
setwd("/Users/yutakashino/Dropbox/sandboxDrop/@IT/sandbox/sumo/codes/")#
library(plyr)#
fn <- file("out.csv", open="r", encoding="utf-8")#
df <- read.csv(file = fn, header = FALSE)#
names(df) <- c("rikishi", "vs", "win", "year", "month")#
nrow(df)#
df <- subset(df, df$win!=-100 & df$win!=-1)#
#
#ddply(subset(df2, year==1999 & month==1), .(rikishi), function(d) data.frame(numwin = sum(d$win)))#
#ddply(subset(df2, year==1999 & month==1), .(rikishi), summarize, numwin=sum(win))#
#
df <- ddply(df, .(rikishi, year, month), summarize, numwin=sum(win))#
#
library(ggplot2)#
p2 <- ggplot(df, aes(numwin)) + geom_histogram(aes(y = ..count..))#
ggsave(plot = p2, filename = "sumoobservation.png")#
#
#p2 + stat_function(geom="line", fun = function(..., total){dbinom(...) * total}, arg = list(size=15, prob=1/2, total=nrow(df3)))#
#
dsumo <- function(x, total) total*dbinom(x, size = 15, prob = 1/2)#
dft<- data.frame(x = c(0:15), win_theory = dsumo(c(0:15), nrow(df)))#
df2 <- as.data.frame(table(df$numwin))#
names(df2) <- c("x", "win_observ")#
str(df2)#
df2 <- transform(df2, x = as.integer(x)-1, win_theory = dft$win_theory)#
ggplot(data = melt(df2, id = 'x'), aes(x = x, y = value, colour = variable)) + geom_line()#
ggplot(data = df2, aes(x)) + geom_point(aes(y = win_observ, colour = "win_observ")) + geom_point(aes(y = win_observ, colour = "win_observ")) + geom_line(aes(y = win_theory, colour = "win_theory"))#
ggsave("sumoanorm.png")#
#
#df5 <- merge(df2, dft, by="x")#
#df6 <- df5[with(df5, order(x)),]#
#write.csv(df5, file="df5.csv")#
#d <- read.csv("df5.csv")#
#ggplot(d, aes(x)) + geom_line(aes(y=win_observ, colour = "win_observ")) + geom_line(aes(y=win_theory, colour="win_theory"))#
#ggplot(data=d, aes(x))+geom_rect(aes(xmin=x-1, xmax=x, ymin=0, ymax=win_observ, colour="darkgreen", fill="white"))+geom_line(aes(y=win_theory, colour="win_theory"))
ggplot(data = df2, aes(x)) + geom_point(aes(y = win_observ, colour = "win_observ")) + geom_line(aes(y = win_observ, colour = "win_observ")) + geom_line(aes(y = win_theory, colour = "win_theory"))
ggsave("sumoanorm.png")
