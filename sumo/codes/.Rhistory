library(arules)
tdf.tran <- as(tdf, "transactions")
tdf[[1]]
str(tdf[[1]])
head(tweet1)
str(tweet1)
tweet1[[1]]
unlist(RMeCabC(tweet1[[1]], 1))
str(unlist(RMeCabC(tweet1[[1]], 1))
)
unlist(RMeCabC(tweet1[[1]], 1))[[1]]
unlist(RMeCabC(tweet1[[1]], 1))[[2]]
RMeCabC(tweet1[[1]], 1)
a1 <- RMeCabC(tweet1[[1]], 1)
a1
unlist(a1)
unlist(a1)["名詞"]
unlist(a1)[names(a1)==”名詞"]
unlist(a1)[names(a1)=="名詞"]
unlist(a1)[names(unlist(a1))=="名詞"]
sapply(a1, unlist)
sapply(tweet1, unlist)
sapply(RMeCabC(tweet1), unlist)
unlist(RMeCabDF(tdf1, 1))
RMeCabDF(tdf1, 1)
b1 <- RMeCabDF(tdf1, 1)
head(b1)
b1[[1,2]]
b1[[1]][[1]]
b1[[1]][[2]]
unlist(b1[[1]])
unlist(b1[1:2,])
b1[1:2]
as(b1[1:2], "transactions")
as(unlist(b1[1:2]), "transactions")
?RMeCab
rmSign[b1[1:2]]
rmSign()b1[1:2])
rmSign(b1[1:2])
b1[1:2][names(b1[1:2])=="名詞"]
names(b1[1:2])
names(b1[1])
names(b1[[]1]])
names(b1[[1]])
names(b1[[1]]) <- NULL
b1[[1]]
names(b1)
head(b1)
rmnames <- function(x){names(x) <- NULL}
sapply(b1, rmnames)
b1
for a in b1:
for (a in b1) names(a) <- NULL
b1
for (a in b1) a
for (a in b1) print a
for (a in b1) print(a)
for (a in b1) print(names(a))
for (a in b1) print(names(a)<-NULL)
b1
head(b1)
for (a in b1) names(a)<-NULL
head(b1)
names(b1[[2]])<-NULL
head(b1)
len(b1)
length(b1)
for (i in 1:length(b1)) b1[[i]] <- NULL
b1
for (i in 1:length(b1)) names(b1[[i]]) <- NULL
head(b1)
b1
as(b1, "transactions")
str(b1)
factor(b1)
for(i in 1:b1) factor(b1[[1]])
for(i in 1:b1) factor(b1[[i]])
for(i in 1:b1) factor(b1[i])
str b1
str(b1)
data1<-list(#
c("学費","下げ","講義","充実","はかっ","欲しい","適当","授業","し","いる","思わ","れる","先生","かなり","居る"),#
c("学費","もう少し","安く","し","欲しい"),#
c("休み","期間","多い","割","学費","高い","何","使わ","いる","はっきりし","欲しい"),#
c("授業","担当","教員","生徒","選ば","せ","欲しい"),#
c("学費","削減","あと","ロッカー"),#
c("個人","ロッカー","作っ","下さい","自動車","通学","認め"),#
c("学費","軽減"),#
c("学費","もっと","安く","し","欲しい"),#
c("クーラー","つけ","欲しい"),#
c("学費","安く","し","下さい")#
)
str(data1)
data1.tran<-as(data1,"transactions")
data1<-list(#
c("学費","下げ","講義","充実","はかっ","欲しい","適当","授業","し","いる","思わ","れる","先生","かなり","居る"),#
c("学費","もう少し","安く","し","欲しい"),#
c("休み","期間","多い","割","学費","高い","何","使わ","いる","はっきりし","欲しい","休み","期間","多い"),#
c("授業","担当","教員","生徒","選ば","せ","欲しい"),#
c("学費","削減","あと","ロッカー"),#
c("個人","ロッカー","作っ","下さい","自動車","通学","認め"),#
c("学費","軽減"),#
c("学費","もっと","安く","し","欲しい"),#
c("クーラー","つけ","欲しい"),#
c("学費","安く","し","下さい")#
)
data1.tran<-as(data1,"transactions")
unique(data1)
data1.tran<-as(data1,"transactions")
data1.tran<-as(uniqe(data1),"transactions")
data1.tran<-as(unique(data1),"transactions")
unique(data1[[3]])
sapply(data1, unique)
sapply(b1, unique)
b2 <- sapply(b1, unique)
b2.tran <-as(b2,"transactions")
as(b2.tran,"data.frame")
itemFrequencyPlot(b2.tran,type="absolute")
b2.ap<-apriori(b2.tran)
inspect(head(SORT(b2.ap,by="support"),n=10))
sapply(b1, rmSign)
rmSign(b1[[1]])
b1[[1]]
str(b1[[1]])
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "ニュース" & lift>2 )#
inspect(SORT(b2.ap1)[1:3])
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "録画" & lift>2 )#
inspect(SORT(b2.ap1)[1:3])
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "nhk")
inspect(SORT(b2.ap1)[1:3])
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "ニュース")
inspect(SORT(b2.ap1)[1:3])
library(RMeCab)#
library(twitteR)#
session <- initSession('yutakashino','iamthet1!')#
search1 <- searchTwitter("#nhk", n = 100, session)#
tdf1 <- data.frame(tweet = tweet1)#
b1 <- RMeCabDF(tdf1, 1)#
for (i in 1:length(b1)) names(b1[[i]]) <- NULL#
b2 <- sapply(b1, unique)#
b2.tran <-as(b2,"transactions")#
itemFrequencyPlot(b2.tran,type="absolute")#
b2.ap<-apriori(b2.tran)#
inspect(head(SORT(b2.ap,by="support"),n=10))
? arules
subset(b2.ap, subset =  support > 0.1 )
subset(b2.ap, subset =  support > 0.2 )
aa <- subset(b2.ap, subset =  support > 0.2 )
itemFrequencyPlot(aa,type="absolute")
itemFrequencyPlot(b2.tran, type="absolute", topN=30)
itemFrequencyPlot(b2.tran, type="absolute", topN=50)
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "戦争")#
inspect(SORT(b2.ap1)[1:3])
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "戦争")#
inspect(SORT(b2.ap1))
b2.ap1 <- subset(b2.ap, subset =  lhs %in% "戦争")#
inspect(SORT(b2.ap1)[1:50])
b2.ap2 <- subset(b2.ap, subset =  rhs %in% "戦争")#
inspect(SORT(b2.ap2)[1:50])
Sys.getlocale()
library(RMecab)
library(RMeCab)
install.packages(c("matrix","arules"))
install.packages(c("Matrix","arules"))
install.packages("twitteR")
library(RMeCab)#
library(twitteR)#
session <- initSession('yutakashino','iamthet1!')#
search1 <- searchTwitter("#nhk", n = 100, session)#
tweet1 <- sapply(search1, text)#
tdf1 <- data.frame(tweet = tweet1)#
b1 <- RMeCabDF(tdf1, 1)#
for (i in 1:length(b1)) names(b1[[i]]) <- NULL#
b2 <- sapply(b1, unique)#
library(arules)
search1
sapply(search1, text)
str(search1)
search1$text
search1[text]
text(search1)
text(search1[1])
search1[1]
search1[2]
str(search1[2])
text(search1[2])
search1[2]@text
search1@text
tdf1 <- data.frame(tweet = search1)
statusText(serch1)
statusText(search1)
search1 <- searchTwitter("#nhk", n = 100, session)
search1.statusText()
?ldply
install.pacakges("ggplot2")
install.packages("ggplot2")
library(plyr)
ldply(search1, text)
unclass(search1)
head(ldply(searchTwitter("#rstats", n=100, session), #
        function(x) data.frame(text=text(x), favorited=favorited(x))))
head(ldply(searchTwitter("#rstats", n=100), function(x) data.frame(text=text(x), favorited=favorited(x))))
ldply(searchTwitter("#rstats", n=100), function(x) data.frame(text=text(x), favorited=favorited(x)))
ldply(unclass(searchTwitter("#rstats", n=100)), function(x) data.frame(text=text(x), favorited=favorited(x)))
a1 <- unclass(search1)
head(a1)
ldply(a1, function(x) data.frame(text=text(x)))
d1 <- data.frame(tweet = a1)
text(a1)
text(a1[1])
text(a1[[1]])
ldply(searchTwitter("#rstats", n=100), text)
fooFun <- function(x) {#
    data.frame(text = statusText(x), favorited=favorited(x),#
               created=created(x), truncated=twitteR:::truncated(x),#
               id=id(x), statusSource=twitteR:::statusSource(x),#
               screenName=screenName(x))#
}
out <- ldply(searchTwitter("rstats", session = getCurlHandle(), n = 10), fooFun)
out <- ldply(searchTwitter("rstats", n = 10, session), fooFun)
session
session <- initSession('yutakashino','iamthet1!')
library(RMeCab)#
library(twitteR)
session <- initSession('yutakashino','iamthet1!')
fooFun <- function(x) {#
    data.frame(text = statusText(x), favorited=favorited(x),#
               created=created(x), truncated=twitteR:::truncated(x),#
               id=id(x), statusSource=twitteR:::statusSource(x),#
               screenName=screenName(x))#
}
out <- ldply(searchTwitter("rstats", session = getCurlHandle(), n = 10), fooFun)
ldply(searchTwitter("rstats", session=getCurlHandle(), n=10), #
              function(x)  c(text=x@text, favorited=x@favorited, created=x@created, #
                             truncated=x@truncated, id=x@id, statusSource=x@statusSource, #
                             screenName=x@screenName )#
                          )
getCurlHandle()
session <- initSession('yutakashino','iamthet1!')
initSession
initSession('yutakashino','iamthet1!')
a <- ldply(searchTwitter("rstats", session=getCurlHandle(), n=10), #
              function(x)  c(text=x@text, favorited=x@favorited, created=x@created, #
                             truncated=x@truncated, id=x@id, statusSource=x@statusSource, #
                             screenName=x@screenName )#
                          )
head(a)
a$text
q()
library(rJava)
install.packages("rJava")
install.packages("caTools")
library(segue)#
.jaddClassPath('~/Dropbox/sandboxDrop/emrR/stax-1.2.0.jar')#
.jaddClassPath('~/Dropbox/sandboxDrop/emrR/jsr173_1.0_api.jar')#
setCredentials('1K5JR55CBHMM2S98J902', 'azfup0HmDIFOHnvtoKj2Y+++TwTFOiK10wKihL4p')
myCluster <- createCluster(numInstances=5)
Sys.info()['sysname']
Sys.info()
Sys.info()['release']
.jaddClassPath('/Users/yutakashino/Dropbox/sandboxDrop/emrR/stax-1.2.0.jar')#
.jaddClassPath('/Users/yutakashino/Dropbox/sandboxDrop/emrR/jsr173_1.0_api.jar')
myCluster <- createCluster(numInstances=5)
.jaddClassPath('/Users/yutakashino/Dropbox/sandboxDrop/emrR/stax-1.2.0.jar')#
.jaddClassPath('/Users/yutakashino/Dropbox/sandboxDrop/emrR/jsr173_1.0_api.jar')#
setCredentials('1K5JR55CBHMM2S98J902', 'azfup0HmDIFOHnvtoKj2Y+++TwTFOiK10wKihL4p')#
myCluster <- createCluster(numInstances=5)
print(.jclassPath())
q()
setwd("/Users/yutakashino/Dropbox/sandboxDrop/@IT/sandbox/sumo/codes/")#
library(plyr)#
fn <- file("out.csv", open="r", encoding="utf-8")#
df0 <- read.csv(file = fn, header = FALSE)#
names(df0) <- c("rikishi", "vs", "win", "year", "month")#
nrow(df0)#
df0 <- subset(df0, df0$win!=-100 & df0$win!=-1)#
#
#df <- ddply(df0, .(rikishi, year, month), summarize, numwin=sum(win)) #
#
#
#foldsumwin <- function(l) Map(function(x) Reduce("+", l[1:x]), c(1:length(l)))#
foldsumwin <- function(l) Reduce("+", l, accumulate = TRUE)#
#
bublist <- function(l){#
    blist <- c()#
    isbubl <- c(0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7)#
    llengh <- length(l)#
    for (i in 1:llengh) {#
        if(i >= 9 & l[i] == isbubl[i]) blist[i] = 1#
        else blist[i] = 0#
    }#
    blist#
}#
#
#bubsubdf(1999, 1, '闘牙')#
bubsubdf <- function(ayear, amonth, arikishi) {#
    df <- subset(df0, df0$year == ayear & df0$month == amonth & df0$rikishi == arikishi)#
    l <- df$win#
    df['bubcand'] <- bublist(unlist(foldsumwin(l)))#
    df#
}#
#
rikishilist <- dlply(df0, c("year", "month"), function(d) unique(as.character(d$rikishi)))#
yearlab <- attr(rikishilist, "split_labels")$year#
monthlab <- attr(rikishilist, "split_labels")$month#
#
df1 <- data.frame()#
for (i in 1:length(yearlab)) {#
    for (j in 1:length(rikishilist[[i]])) {#
        #print(rikishilist[[i]][j])#
        bdf <- bubsubdf(yearlab[i], monthlab[i], rikishilist[[i]][j])#
        #print(bdf)#
        df1 <- rbind(df1, bdf)#
    }#
}#
#
attach(df1)#
#
df2 <- subset(df1, df1$bubcand == 1)#
brikishi <- as.character(df2$rikishi)#
bvs <- as.character(df2$vs)#
byear <- df2$year#
bmonth <- df2$month#
#
attach(df2)
> df2 <- subset(df1, df1$bubcand == 1)#
> brikishi <- as.character(df2$rikishi)#
> bvs <- as.character(df2$vs)#
> byear <- df2$year#
> bmonth <- df2$month
attach(df1)#
#
df2 <- subset(df1, df1$bubcand == 1)#
brikishi <- as.character(df2$rikishi)#
bvs <- as.character(df2$vs)#
byear <- df2$year#
bmonth <- df2$month
attach(df1)
dettach(df1)
dattach(df2)
dettach(df2)
dettach
?dettach
detach(df2)
detach(df1)
attach(df1)
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    print(c(i, bubvs))#
}
df1$bubcand[df1$rikishi == bvs[2016] & df1$vs == brikishi[2016] & df1$year == byear[2016] & df1$month == bmonth[2016]]
df1[df1$rikishi == bvs[2016] & df1$vs == brikishi[2016] & df1$year == byear[2016] & df1$month == bmonth[2016]]
bvs[2016]
brikishi[2016]
byear[2016]
bmonth[2016]
df1[df1$rikishi == brikishi[2016] & df1$vs == bvs[2016] & df1$year == byear[2016] & df1$month == bmonth[2016]]
df2[2016]
df2[2015]
df2
df2[2016,]
df1[df1$rikishi == '蒼国来' & df1$vs =='玉飛鳥' & df1$year == 2010 & df1$month == 7]
df1[df1$rikishi == '蒼国来 ' & df1$vs =='玉飛鳥' & df1$year == 2010 & df1$month == 7]
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    print(c(i, bubvs))#
}
subset(df1, df1$rikishi == bvs[2044] & df1$vs == brikishi[2044] & df1$year == byear[2044] & df1$month == bmonth[2044])
subset(df1, df1$rikishi == brikishi[2044] & df1$vs == bvs[2044] & df1$year == byear[2044] & df1$month == bmonth[2044])
subset(df1, df1$rikishi == bvs[2017] & df1$vs == brikishi[2017] & df1$year == byear[2017] & df1$month == bmonth[2017])
subset(df1, df1$rikishi == brikishi[2017] & df1$vs == bvs[2017] & df1$year == byear[2017] & df1$month == bmonth[2017])
subset(df0, df0$rikishi == bvs[2017] & df0$vs == brikishi[2017] & df0$year == byear[2017] & df0$month == bmonth[2017])
subset(df0, df0$rikishi == '蒼国来' & df0$year == 2010 & df0$month == 7)
subset(df0, df0$rikishi == '蒼国来' & df0$year == 2010)
subset(df0, df0$rikishi == bvs[2017] & df0$year == 2010)
subset(df0, df0$rikishi == bvs[2017] & df0)
subset(df0, df0$rikishi == bvs[2017])
? subset
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
}
str(bubvs)
bubs
bubvs
bubvs
length(byear)
df1
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
}
bubvs
length(bubvs)
av <- c()#
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    av <- c(av, bubvs)#
}
av
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    if(bubvs==NA) print('NA')#
}
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    print(bubvs)#
}
?numeric
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    if(bubvs == numeric(0)) print('numeric(0)!')#
}
for (i in 1:length(byear)){#
    bubvs <- subset(df1, df1$rikishi == bvs[i] & df1$vs == brikishi[i] & df1$year == byear[i] & df1$month == bmonth[i])$bubcand#
    if(length(bubvs) == 0) print('numeric(0)!')#
}
q()
